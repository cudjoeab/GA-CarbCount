# Generated by Django 2.2.3 on 2019-09-23 20:50

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Diabetic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('morning_ratio', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('afternoon_ratio', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('evening_ratio', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('night_ratio', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('morning_cor_factor', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('afternoon_cor_factor', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('evening_cor_factor', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('night_cor_factor', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('morning_target', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('afternoon_target', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('evening_target', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('night_target', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('insulin_duration', models.FloatField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('insulin_type', models.CharField(blank=True, max_length=255)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='diabetics_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('food', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('carbs', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fibre', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('meal_type', models.CharField(blank=True, max_length=255)),
                ('blood_glucose', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('insulin_dose', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Practitioner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('clinic_name', models.CharField(max_length=255)),
                ('license_id', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9999999)])),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('total_carbs', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('total_fibre', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('ingredients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=225), default=list, size=None)),
                ('total_servings', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(500)])),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('image_link', models.URLField(blank=True, max_length=255)),
                ('diabetic_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Diabetics', to='CarbCount.Diabetic')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diabetic_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diabetic', to='CarbCount.Diabetic')),
                ('meal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal', to='CarbCount.Meal')),
            ],
        ),
        migrations.AddField(
            model_name='diabetic',
            name='practitioner_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='practitioner', to='CarbCount.Practitioner'),
        ),
    ]
